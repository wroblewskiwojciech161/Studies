
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULTDIVIDEMODULOnonassocNEGNUMNEG_EXPONENTNEGrightPOWERADD DIVIDE END ERR LBRACKET MODULO MULT NUMBER POWER RBRACKET SUBexpression : END\n           | ERRexpression : expression ENDexpression : expression ADD expression\n           | expression SUB expression\n           | expression MULT expression\n           | expression DIVIDE expression\n           | expression MODULO expression\n           | expression POWER exponentexponent : exponent ADD exponent\n           | exponent SUB exponent\n           | exponent MULT exponent\n           | exponent DIVIDE exponent\n           | exponent MODULO exponent\n           | exponent POWER exponentexpression : SUB NUMBER %prec NEGNUMexpression : SUB expression %prec NEGexpression : LBRACKET expression RBRACKETexpression : NUMBERexponent : SUB NUMBER %prec NEG_EXPONENTexponent : SUB exponent %prec NEGexponent : LBRACKET exponent RBRACKETexponent : NUMBER'
    
_lr_action_items = {'END':([0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,26,33,34,36,37,38,39,40,41,42,],[2,7,-1,-2,2,-19,2,-3,2,2,2,2,2,-16,-17,7,-4,-5,-6,-7,-8,-9,-23,-18,-20,-21,-15,-10,-11,-12,-13,-14,-22,]),'ERR':([0,4,6,8,9,10,11,12,],[3,3,3,3,3,3,3,3,]),'SUB':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[4,9,-1,-2,4,-19,4,-3,4,4,4,4,4,23,-16,-17,9,-4,-5,-6,-7,-8,-9,23,-23,23,-18,23,23,23,23,23,23,-20,-21,29,-15,-10,-11,-12,-13,-14,-22,]),'LBRACKET':([0,4,6,8,9,10,11,12,13,23,25,27,28,29,30,31,32,],[6,6,6,6,6,6,6,6,25,25,25,25,25,25,25,25,25,]),'NUMBER':([0,4,6,8,9,10,11,12,13,23,25,27,28,29,30,31,32,],[5,14,5,5,5,5,5,5,24,33,24,24,24,24,24,24,24,]),'$end':([1,2,3,5,7,14,15,17,18,19,20,21,22,24,26,33,34,36,37,38,39,40,41,42,],[0,-1,-2,-19,-3,-16,-17,-4,-5,-6,-7,-8,-9,-23,-18,-20,-21,-15,-10,-11,-12,-13,-14,-22,]),'ADD':([1,2,3,5,7,14,15,16,17,18,19,20,21,22,24,26,33,34,35,36,37,38,39,40,41,42,],[8,-1,-2,-19,-3,-16,-17,8,-4,-5,-6,-7,-8,-9,-23,-18,-20,-21,28,-15,-10,-11,-12,-13,-14,-22,]),'MULT':([1,2,3,5,7,14,15,16,17,18,19,20,21,22,24,26,33,34,35,36,37,38,39,40,41,42,],[10,-1,-2,-19,-3,-16,-17,10,10,10,-6,-7,-8,-9,-23,-18,-20,-21,30,-15,30,30,-12,-13,-14,-22,]),'DIVIDE':([1,2,3,5,7,14,15,16,17,18,19,20,21,22,24,26,33,34,35,36,37,38,39,40,41,42,],[11,-1,-2,-19,-3,-16,-17,11,11,11,-6,-7,-8,-9,-23,-18,-20,-21,31,-15,31,31,-12,-13,-14,-22,]),'MODULO':([1,2,3,5,7,14,15,16,17,18,19,20,21,22,24,26,33,34,35,36,37,38,39,40,41,42,],[12,-1,-2,-19,-3,-16,-17,12,12,12,-6,-7,-8,-9,-23,-18,-20,-21,32,-15,32,32,-12,-13,-14,-22,]),'POWER':([1,2,3,5,7,14,15,16,17,18,19,20,21,22,24,26,33,34,35,36,37,38,39,40,41,42,],[13,-1,-2,-19,-3,-16,13,13,13,13,13,13,13,27,-23,-18,-20,27,27,27,27,27,27,27,27,-22,]),'RBRACKET':([2,3,5,7,14,15,16,17,18,19,20,21,22,24,26,33,34,35,36,37,38,39,40,41,42,],[-1,-2,-19,-3,-16,-17,26,-4,-5,-6,-7,-8,-9,-23,-18,-20,-21,42,-15,-10,-11,-12,-13,-14,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,6,8,9,10,11,12,],[1,15,16,17,18,19,20,21,]),'exponent':([13,23,25,27,28,29,30,31,32,],[22,34,35,36,37,38,39,40,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> END','expression',1,'p_end','calc.py',150),
  ('expression -> ERR','expression',1,'p_end','calc.py',151),
  ('expression -> expression END','expression',2,'p_exp_end','calc.py',156),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','calc.py',161),
  ('expression -> expression SUB expression','expression',3,'p_expression_binop','calc.py',162),
  ('expression -> expression MULT expression','expression',3,'p_expression_binop','calc.py',163),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',164),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','calc.py',165),
  ('expression -> expression POWER exponent','expression',3,'p_expression_binop','calc.py',166),
  ('exponent -> exponent ADD exponent','exponent',3,'p_wyk_binop','calc.py',189),
  ('exponent -> exponent SUB exponent','exponent',3,'p_wyk_binop','calc.py',190),
  ('exponent -> exponent MULT exponent','exponent',3,'p_wyk_binop','calc.py',191),
  ('exponent -> exponent DIVIDE exponent','exponent',3,'p_wyk_binop','calc.py',192),
  ('exponent -> exponent MODULO exponent','exponent',3,'p_wyk_binop','calc.py',193),
  ('exponent -> exponent POWER exponent','exponent',3,'p_wyk_binop','calc.py',194),
  ('expression -> SUB NUMBER','expression',2,'p_expression_negnum','calc.py',218),
  ('expression -> SUB expression','expression',2,'p_expression_neg','calc.py',226),
  ('expression -> LBRACKET expression RBRACKET','expression',3,'p_expression_brackets','calc.py',232),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',238),
  ('exponent -> SUB NUMBER','exponent',2,'p_exponent_negexponent','calc.py',246),
  ('exponent -> SUB exponent','exponent',2,'p_exponent_neg','calc.py',254),
  ('exponent -> LBRACKET exponent RBRACKET','exponent',3,'p_exponent_brackets','calc.py',260),
  ('exponent -> NUMBER','exponent',1,'p_exponent_number','calc.py',266),
]
